#데이터 분석하기 9장
#한국 복지패널 데이터 - SPSS 형태로 되어 있음(foreign)패키지 사용

install.packages("foreign")

library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)

#데이터 불러오기
read_welfare <- read.spss(file="Koweps_hpc10_2015_beta1.sav", to.data.frame=T)
#데이터 프레임 반드시 설정! 안그러면 리스트


#복사본 만들기
welfare <- read_welfare

#데이터 검토하기
head(welfare)
tail(welfare)
View(welfare)
dim(welfare)
str(welfare)
summary(welfare)

#변수 이름 정제하기
welfare <- rename(welfare, sex=h10_g3, birth=h10_g4, marriage=h10_g10,
		religion=h10_g11, income=p1002_8aq1, code_job=h10_eco9, code_region=h10_reg7)
		#성별, 태어난 연도, 혼인 상태, 종교, 월급, 직업코드, 지역코드


##9-2) 성별에 따른 월급 차이

class(welfare$sex)
table(welfare$sex)

#이상치 결측처리
welfare$sex <- ifelse(welfare$sex == 9, NA, welfare$sex)
table(is.na(welfare$sex)


#성별 항목 이름 부여
welfare$sex <- ifelse(welfare$sex ==1, "male","female")
table(welfare$sex) #범주형 자료 
qplot(welfare$sex)

class(welfare$income)
summary(welfare$income) #연속형 자료(요약 통계량 확인)
qplot(welfare$income) + xlim(0,1000)

#이상치 확인 후 결측처리
summary(welfare$income)
welfare$income <- ifelse(welfare$income %in% c(0,9999), NA, welfare$income)

#결측치 확인
table(is.na(welfare$income))


#성별에 따른 월급 차이 분석하기
#성별 월급 평균표 만들기

sex_income <- welfare %>% 
filter(!is.na(income)) %>%
group_by(sex) %>%
summarise(mean_income= mean(income))

#그래프 만들기
ggplot(data = sex_income, aes(x = sex, y= mean_income)) + geom_col()
#col 과 bar의 차이점 유의-> 원자료를 이용한 막대그래프는 bar, 요약표를 통해 만들때는 col(x,y모두 찍어줌)



#09-3 나이와 월급의 관계
class(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)

#전처리 - 이상치와 결측치 제거
table(is.na(welfare$birth))
welfare$birth <- ifelse(welfare$birth==9999,NA,welfare$birth)


#파생변수 만들기- 나이 (2015년도 조사본이므로 2015- 태어난 연도 -1)

welfare$age <- 2015 - welfare$birth +1
summary(welfare$age)
qplot(welfare$age)

#나이와 월급의 관계 분석하기 - 월급 평균표, 그래프

age_income <- welfare %>%
filter(!is.na(income)%>%
group_by(age)%>%
summarise(mean_income =mean(income))

head(age_income)

ggplot(data = age_income, aes(x=age, y=mean_income)) + geom_line()

#9-4) 연령대에 따른 월급 차이
#파생변수 만들기 - 연령대 초년(30세 미만), 중년(30~59세), 노년(60세 이상)

welfare <- welfare %>%
mutate(ageg = ifelse(age <30, "young",
		ifelse(age <=59, "middle", "old")))
table(welfare$ageg)
qplot(welfare$ageg)

#연령대에 따른 월급 차이 분석하기

ageg_income <- welfare %>%
filter(!is.na(income))%>%
group_by(ageg)%>%
summarise(mean_income = mean(income))

ggplot(data = ageg_income, aes(x= ageg, y=mean_income)) +geom_col()

#알파벳 순이 아니라 막대가 초년, 중년, 노년 순으로 정의하려면,
ggplot(data=ageg_income, aes(x=ageg, y=mean_income)) 
+geom_col() 
+scale_x_discrete(limits = c("young", "middle", "old"))


#9-5 연령대 및 성별 월급 차이
#평균표 만들기
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg,sex) %>%
summarise(mean_income = mean(income))

ggplot(data=sex_income, aes(x=ageg, y=mean_income, fill = sex))
+geom_col()
+scale_x_discrete(limits = c("young","middle","old"))
#함께 출력되므로 한눈에 보기 어려움, 제대로된 막대 그래프는 아래 

ggplot(data=sex_income, aes(x=ageg, y=mean_income, fill=sex)) 
+geom_col(position = "dodge")
+scale_x_discrete(limits=c("young","middle","old"))


#연령대 구분 없이 나이 및 성별 월급 평균표를 만들어서 선그래프로 표현(성별 따라 다른 색)
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex)%>%
summarise(mean_income = mean(income))

head(sex_age)

ggplot(data=sex_age, aes(x=age, y=mean_income, col=sex)) +geom_line()


#9-6 직업별 월급 차이
class(welfare$code_job)
table(welfare$code_job)

#정처리 깃허브에서 다운로드, 프로젝트 폴더에 삽입한후, 직종 코드 시트에 직업분류코드 정리
library(readxl)
list_job <- read_excel("Koweps_Codebook.xlsx", col_names=T, sheet=2)
head(list_job)
dim(list_job)

#####left_join()으로 job변수를 welfare에 결합한다. 공통으로 든 code_job 변수 기준 활용

welfare <- left_join(welfare, list_job, id="code_job")

welfare%>%
filter(!is.na(code_job)%>%
select(code_job, job)%>%
head(10)

#직업별 월급 평균표 만들기
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income))%>%
group_by(job)%>%
summarise(mean_income = mean(income))

head(job_income)

#내림 차순 정렬
top10 <- job_income %>%
arrange(desc(mean_income))%>%
head(10)

#그래프 만들기 -> 변수 이름 값이 길 경우에 축 돌리기(오른쪽으로 돌리기 coord_filp())
ggplot(data = top10, aes(x = reorder(job, mean_income), y=mean_income)) 
+geom_col() 
+coord_filp()

#하위 10위 추출
bottom10 <- job_income%>%
arrange(mean_income)%>%
head(10)

ggplot(data=bottom10, aes(x=reorder(job,-mean_income), y=mean_income))
+geom_col()
+coord_filp()
+ylim(0,850)


#성별 직업 빈도 성별로 어떤 직업이 가장 많은가
#남성 직업 빈도 상위 10개 추출


job_male <- welfare %>%
filter(!is.na(job)& sex=="male")%>%
group_by(job)%>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
head(10)


#여성 직업 빈도 상위 10개 추출
job_female <- welfare %>%
filter(!is.na(job)& sex=="female")%>%
group_by(job)%>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
head(10)

#그래프 만들기 
ggplot(data = job_male, aes(x=reorder(job,n), y= n)) 
+geom_col()
+coord_filp()

ggplot(data = job_female, aes(x=reorder(job,n), y= n)) 
+geom_col()
+coord_filp()




#9-8 종교 유무에 따른 이혼율
class(welfare$religion)
table(welfare$religion) #1 있음 2 없음 9모름/무응답

#전처리 종교유무
welfare$religion <- ifelse(welfare$religion==1, "yes","no")
table(welfare$religion)
qplot(welfare$religion)

#혼인상태 변수 검토
class(welfare$marriage)
table(welfare$marriage)

#파생변수 만들기 0 비해당 1 유배우 2....사별 이혼 별거 미혼, 6기타
#이혼 여부 변수 만들기
welfare$group_marriage <- ifelse(welfare$marriage ==1, "marriage",
			ifelse(welfare$marriage ==3, "divorce",NA))
table(welfare$group_marriage)
table(!is.na(welfare$gruop_marriage)
qplot(welfare$group_marriage)


#종교 유무에 따른 이혼율 표 만들기(종교 유무 /결혼상태표 각각 구하고 각 종교 유무 집단의 전체 빈도 나눠 비율구함)
#1번방법-비율은 round() 이용 소수점 첫째 자리까지 표현

religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage)%>%
summarise(n= n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct=round(n/tot_group*100,1))

#2번방법-count이용하여- dplyr 집단별 빈도 구하기

religion_marriage <- welfare %>%
filter(!is.na(group_marriag))%>%
count(religion, group_marriage) %>%
group_by(religion)%>%
mutate(pct=round(n/sum(n)*100,1))


#이혼에 해당하는 값만 추출하여 이혼율 표 만들기
divorce <- religion_marriage%>%
filter(group_marriage=="divorce")%>%
select(religion,pct)

#이혼율표 그래프
ggplot(data=divorce, aes(x=religion,y=pct))+geom_col()



#연령대 및 종교 유무에 따른 이혼율 분석

ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage)%>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100,1))

#역시나 방법2
ageg_marriage <- welfare%>%
filter(!is.na(group_marriage))%>%
count(ageg,group_marriage)%>%
group_by(ageg)%>%
mutate(pct=round(n/sum(n)*100,1))


#그래프 그리기 
ageg_divorce <_ ageg_marriage%>%
filter(ageg!= "young" & group_marriage=="divorce")%>%
select(ageg,pct)

ggplot(data=ageg_divorce,aes(x=ageg, y=pct)) + geom_col()


#연령대, 종교 유무, 결혼 상태별 비율표 만들기
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young")%>%
group_by(ageg,religion,group_marrage)%>%
summarise(n=n())%>%
mutate(tot_group=sum(n))%>%
mutate(pct=round(n/tot_group*100,1))
#2번 방법도 가능 )

#연령대 및 종교 유무별 이혼율 표 만들기
df_divorce <- ageg_religion_marrage %>%
filter(group_marriage=="divorce")%>%
select(ageg,religion,pct)

#그래프 만들기
ggplot(data=df_divorce,aes(x=ageg,y=pct,fill=religion)) + geom_col(position="dodge")


#9-9 지역별 연령대 비율